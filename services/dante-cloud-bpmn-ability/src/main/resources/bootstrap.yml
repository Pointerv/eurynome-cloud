server:
  port: 7072
spring:
  application:
    name: @artifactId@ #拿到POM文件中的值
  profiles:
    active: @facility@
  main:
    allow-bean-definition-overriding: true

---
# spring cloud alibaba 基础设施配置
spring:
  config:
    activate:
      on-profile: alibaba
  cloud:
    nacos:
      config:
        namespace: ${ALIBABA_NAMESPACE:@alibaba.namespace@}
        server-addr: ${ALIBABA_CONFIG_SERVER_ADDR:@alibaba.config.server-addr@}
        file-extension: yaml
        shared-configs:
          - data-id: dante-cloud-environment.yaml
            group: ${PROFILE:@profile@}
          - data-id: dante-cloud-platform.yaml
            group: common
          - data-id: dante-cloud-database-${DATABASE:@database@}.yaml
            group: common
          - data-id: dante-cloud-database.yaml
            group: common
          - data-id: dante-cloud-redis.yaml
            group: common
          - data-id: dante-cloud-cache.yaml
            group: common
          - data-id: dante-cloud-rest.yaml
            group: common
          - data-id: dante-cloud-kafka.yaml
            group: common
          - data-id: ${spring.application.name}.yaml
            group: service
      discovery:
        namespace: ${ALIBABA_NAMESPACE:@alibaba.namespace@}
        server-addr: ${ALIBABA_DISCOVERY_SERVER_ADDR:@alibaba.discovery.server-addr@}
    sentinel:
      transport:
        port: 8719
        dashboard: ${ALIBABA_SENTINEL_SERVER_ADDR:@alibaba.sentinel.server-addr@}
      eager: true #服务注启动，直接注册到dashboard
#      datasource:
#        flow:
#          nacos:
#            server-addr: @alibaba.config.server-addr@
#            data-id: ${spring.application.name}-sentienl-flow.json
#            group-id: management
#            data-type: json
#            rule-type: flow

logging:
  file:
    name: logs/${spring.application.name}.log
  level:
    root: INFO
    # 关闭不必要的日志
    org.reflections.Reflections: off
    com.alibaba.nacos.client: error
    com.alibaba.nacos.common.remote.client: error
    com.ulisesbocchio: error
    # 开发、调试需要的日志
    cn.herodotus: info
    org.springframework.security: info
    org.springframework.web: info
    com.alicp.jetcache: info
    org.springframework.cloud.bus: info
    org.apache.kafka: warn

---
# spring cloud tencent 基础设施配置
spring:
  config:
    activate:
      on-profile: tencent
  cloud:
    #    inetutils:
    #      ignored-interfaces:
    #        - eth0
    polaris:
      enabled: true
      address: ${TENCENT_POLARIS_SERVER_ADDR:grpc://@tencent.polaris.server-addr@}
      namespace: ${TENCENT_POLARIS_NAMESPACE:@tencent.polaris.namespace@}
      discovery:
        service: ${spring.application.name}
        namespace: ${TENCENT_POLARIS_NAMESPACE:@tencent.polaris.namespace@}
      config:
        address: ${TENCENT_POLARIS_CONFIG_ADDR:grpc://@tencent.polaris.config-addr@}
        local-file-root-path: ${TENCENT_POLARIS_LOCAL_DIR:@tencent.polaris.local.dir@}
        groups:
          - name: ${PROFILE:@profile@}
            files:
              - dante-cloud-environment.yaml
          - name: common
            files:
              - dante-cloud-platform.yaml
              - dante-cloud-database-${DATABASE:@database@}.yaml
              - dante-cloud-database.yaml
              - dante-cloud-redis.yaml
              - dante-cloud-cache.yaml
              - dante-cloud-rest.yaml
              - dante-cloud-kafka.yaml
          - name: service
            files:
              - ${spring.application.name}.yaml

logging:
  file:
    name: logs/${spring.application.name}.log
  level:
    root: INFO
    # 开发、调试需要的日志
    org.springframework.security: info
    org.springframework.web: info
    org.springframework.cloud.bus: info
    org.apache.kafka: warn
    cn.herodotus: info
---
# spring 全家桶基础设施配置
spring:
  config:
    activate:
      on-profile: original
  cloud:
    zookeeper:
      discovery:
        instance-host: ${spring.cloud.client.ip-address}